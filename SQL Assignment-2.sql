-- ASSIGNMENT-2 
-- BASIC AGGREGATE FUNCTIONS:
-- Question1- Retrieve the total number of rentals made in the Sakila database.
select count(*) as total_no_rental from rental ;

-- Question2- Find the average rental duration (in days) of movies rented from the Sakila database. 
Select avg(datediff(return_date, rental_date)) as average_duration_in_days from rental;

-- STRING FUNCTIONS:
--  Question 3: Display the first name and last name of customers in uppercase. 
select upper(first_name) as upper_first_name, upper(last_name) as upper_last_name from customer;

-- Question 4:Extract the month from the rental date and display it alongside the rental ID. 
select rental_id,  month(rental_date) as month from rental;

-- GROUP BY:
-- Question 5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id , count(rental_id) as count_of_rentals from rental group by customer_id ;

-- Question 6:Find the total revenue generated by each store.
SELECT 
    store.store_id, SUM(amount) AS total_revenue
FROM
    store
        left JOIN
    staff ON store.store_id = staff.store_id
        left JOIN
    payment ON staff.staff_id = payment.staff_id
GROUP BY store_id;


-- JOINS:
-- question7- Display the title of the movie, customer's first name, and last name who rented it.
SELECT 
    title AS title_of_movie,
    CONCAT(first_name, ' ', last_name) AS Name
FROM
    film
        LEFT JOIN
    inventory ON film.film_id = inventory.film_id
        LEFT JOIN
    rental ON inventory.inventory_id = rental.inventory_id
        LEFT JOIN
    customer ON rental.customer_id = customer.customer_id;
    
    -- Question8-Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
    SELECT 
    CONCAT(first_name, ' ', last_name) AS Name
FROM
    actor
       inner  JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        inner JOIN
    film ON film_actor.film_id = film.film_id
WHERE
title = "gone with the wind"; 

-- GROUP BY:
-- Question1-Determine the total number of rentals for each category of movies. 
SELECT 
    category.name,
    category.category_id,
    COUNT(rental_id) AS total_rentals
FROM
    category
       left  JOIN
    film_category ON category.category_id = film_category.category_id
       left  JOIN
    inventory ON film_category.film_id = inventory.film_id
      left   JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY category_id;

-- Question2-Find the average rental rate of movies in each language.
SELECT 
    language.name AS language, AVG(rental_rate) AS avg_rental
FROM
    language
        LEFT JOIN
    film ON language.language_id = film.language_id
GROUP BY language; 

-- JOINS:
-- Question3-Retrieve the customer names along with the total amount they've spent on rentals.
SELECT 
    CONCAT(first_name, ' ', last_name) AS name,
    SUM(amount) AS total_amount
FROM
    customer
        LEFT JOIN
    payment ON customer.customer_id = payment.customer_id
        LEFT JOIN
    rental ON payment.rental_id = rental.rental_id
GROUP BY name
ORDER BY total_amount;
    
-- Question4-List the titles of movies rented by each customer in a particular city (e.g., 'London').
select concat(first_name, " " , last_name) as name , title  from customer
join address on customer.address_id= address.address_id
join city on address.city_id= city.city_id
join rental on customer.customer_id= rental.customer_id
join inventory on rental.inventory_id= inventory.inventory_id
join film on inventory.film_id= film.film_id
where city.city = 'london';

-- Advanced JOINS and GROUP BY:
-- Question5- -- Display the top 5 rented movies along with the number of times they've been rented.
SELECT 
    title AS rented_movies,
    COUNT(rental_id) AS no_of_times_rented
FROM
    rental r
        JOIN
    inventory i ON r.inventory_id = i.inventory_id
        JOIN
    film f ON i.film_id = f.film_id
GROUP BY rented_movies order by no_of_times_rented desc
LIMIT 5;

-- Question6- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT 
    c.customer_id, c.first_name, c.last_name
FROM
    customer c
        JOIN
    rental r ON c.customer_id = r.customer_id
        JOIN
    inventory i ON r.inventory_id = i.inventory_id
        JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1 , 2)
GROUP BY c.customer_id , c.first_name , c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;

















    










